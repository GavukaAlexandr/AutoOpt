# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum BodyType {
  CABRIOLET
  COUPE
  HATCHBACK
  LIMOUSINE
  MINIVAN
  PICKUP
  SEDAN
  SUV
  UNIVERSAL
  VAN
}

type Brand {
  id: ID!
  models: [Model!]!
  name: String!
  type: [Type!]!
}

input BrandFilter {
  ids: [ID!]
  q: String
}

input CreateOrderInput {
  bodyType: BodyType!
  carPart: String!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  modelId: String!
  part: [PartType!]!
  transmission: Transmission!
  userId: String!
  vin: String!
  year: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum DriveType {
  FRONT
  FULL
  REAR
}

enum FuelType {
  DIESEL
  ELECTRO
  GASOLINE
  HYBRID
}

type ListMetadata {
  count: Int
}

type Model {
  brand: [Brand!]!
  id: ID!
  name: String!
  type: [Type!]!
}

input ModelFilter {
  brandIds: String
  ids: [ID!]
  q: String
  typeIds: String
}

type Mutation {
  createBrand(name: String!): Brand!
  createModel(brandIds: ID, name: String!, typeIds: ID): Model!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  createType(name: String!): Type!
  deleteOrder(id: ID!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  updateType(id: ID!, name: String!): Type!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Order {
  bodyType: BodyType!
  carPart: String!
  createdAt: DateTime!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  id: String!
  modelId: String!
  orders: [User!]!
  part: [PartType!]!
  status: OrderStatus!
  transmission: Transmission!
  updatedAt: DateTime!
  userId: String!
  vin: String!
  year: String!
}

input OrderFilter {
  ids: [ID!]
}

enum OrderStatus {
  DONE
  PROCESSING
  SENT
}

enum PartType {
  ANALOGUE
  ORIGINAL
}

type Query {
  Brand(id: String!): Brand!
  Model(id: String!): Model!
  Order(id: ID): Order!
  Type(id: String!): Type!
  User(id: String!): User!
  _allBrandsMeta(filter: BrandFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  _allModelsMeta(filter: ModelFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  _allOrdersMeta(filter: OrderFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  _allTypesMeta(filter: TypeFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  _allUsersMeta(filter: UserFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  allBrands(filter: BrandFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [Brand!]!
  allModels(filter: ModelFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [Model!]!
  allOrders(filter: OrderFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [Order!]!
  allTypes(filter: TypeFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [Type!]!
  allUsers(filter: UserFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [User!]!
  orderStatuses: [String!]!
}

enum Transmission {
  AUTOMATIC
  MECHANICAL
  ROBOT
  VARIABLE
}

type Type {
  brands: [Brand!]!
  id: ID!
  models: [Model!]!
  name: String!
}

input TypeFilter {
  ids: [ID!]
  q: String
}

input UpdateOrderInput {
  bodyType: BodyType!
  carPart: String!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  id: ID!
  modelId: String!
  part: [PartType!]!
  transmission: Transmission!
  vin: String!
  year: String!
}

input UpdateUserInput {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  phoneNotification: Boolean!
  phoneNumber: String!
  telegramNotification: Boolean!
  viberNotification: Boolean!
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  orders: [Order!]!
  phoneNotification: Boolean!
  phoneNumber: String!
  telegramNotification: Boolean!
  updatedAt: DateTime!
  viberNotification: Boolean!
}

input UserFilter {
  ids: [ID!]
}
