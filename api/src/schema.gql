# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum BodyType {
  CABRIOLET
  COUPE
  HATCHBACK
  LIMOUSINE
  MINIVAN
  PICKUP
  SEDAN
  SUV
  UNIVERSAL
  VAN
}

input CreateOrderInput {
  bodyType: BodyType!
  carPart: String!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  modelId: String!
  part: [PartType!]!
  transmission: Transmission!
  userId: String!
  vin: String!
  year: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteOrderInput {
  id: String!
}

enum DriveType {
  FRONT
  FULL
  REAR
}

enum FuelType {
  DIESEL
  ELECTRO
  GASOLINE
  HYBRID
}

type ListMetadata {
  count: Int
}

type Mutation {
  createOrder(createOrderInput: CreateOrderInput!): Order!
  deleteOrder(deleteOrderInput: DeleteOrderInput!): Boolean!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Order {
  bodyType: BodyType!
  carPart: String!
  createdAt: DateTime!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  id: String!
  modelId: String!
  part: [PartType!]!
  status: OrderStatus!
  transmission: Transmission!
  updatedAt: DateTime!
  userId: String!
  vin: String!
  year: String!
}

input OrderFilter {
  ids: [ID!]
}

enum OrderStatus {
  DONE
  PROCESSING
  SENT
}

enum PartType {
  ANALOGUE
  ORIGINAL
}

type Query {
  _allOrdersMeta(filter: OrderFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  _allUsersMeta(filter: UserFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): ListMetadata!
  allOrders(filter: OrderFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [Order!]!
  allUsers(filter: UserFilter, page: Int, perPage: Int, sortField: String, sortOrder: String): [User!]!
  bodyType: BodyType!
  getOrder(id: String!): Order!
  getUser(id: String!): User!
}

enum Transmission {
  AUTOMATIC
  MECHANICAL
  ROBOT
  VARIABLE
}

input UpdateOrderInput {
  bodyType: BodyType!
  carPart: String!
  drive: DriveType!
  engineVolume: String!
  fuel: [FuelType!]!
  id: ID!
  modelId: String!
  part: [PartType!]!
  transmission: Transmission!
  vin: String!
  year: String!
}

input UpdateUserInput {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  phoneNotification: Boolean!
  phoneNumber: String!
  telegramNotification: Boolean!
  viberNotification: Boolean!
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  orders: [Order!]!
  phoneNotification: Boolean!
  phoneNumber: String!
  telegramNotification: Boolean!
  updatedAt: DateTime!
  viberNotification: Boolean!
}

input UserFilter {
  id: ID
}
