type Query {
  orders: [Order]
  order(id: ID!): Order
}

type Mutation {
  createOrder(createOrderInput: CreateOrderInput): Order
}

type Subscription {
  orderCreated: Order
}

input CreateOrderInput {
  userId: String
  modelId: String
  transmission: Transmission
  bodyType: BodyType
  drive: DriveType
  year: String
  engineVolume: String
  vin: String
  carPart: String
  fuel: FuelType
  part: PartType
}

type Order {
  id: String
  userId: String
  modelId: String
  transmission: Transmission
  bodyType: BodyType
  drive: DriveType
  year: String
  engineVolume: String
  vin: String
  carPart: String
  fuel: [FuelType]
  part: [PartType]
  createdAt: String
  updatedAt: String
  user: User
  model: String
}

type User {
  id: String
  firstName: String
  lastName: String
  token: String
  firebaseUid: String
  email: String
  phoneNumber: String
  telegramNotification: Boolean
  viberNotification: Boolean
  phoneNotification: Boolean
  createdAt: String
  updatedAt: String
}

enum FuelType {
  GASOLINE
  DIESEL
  ELECTRO
  HYBRID
}

enum Transmission {
  AUTOMATIC
  MECHANICAL
  VARIABLE
  ROBOT
}

enum BodyType {
  SEDAN
  HATCHBACK
  COUPE
  UNIVERSAL
  MINIVAN
  SUV
  PICKUP
  CABRIOLET
  VAN
  LIMOUSINE
}

enum DriveType {
  FULL
  FRONT
  REAR
}

enum PartType {
  ORIGINAL
  ANALOGUE
}
